import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Eye, EyeOff, Gift, Mail } from 'lucide-react';
import { auth, db, sendEmailVerification } from '../lib/firebase';
import { createUserWithEmailAndPassword } from 'firebase/auth';
import { doc, setDoc } from 'firebase/firestore';

interface AuthModalProps {
  isOpen: boolean;
  onClose: () => void;
  showGift?: boolean;
}

export const AuthModal: React.FC<AuthModalProps> = ({ isOpen, onClose, showGift }) => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [showVerification, setShowVerification] = useState(false);
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');
    setShowVerification(false);

    try {
      const userCredential = await createUserWithEmailAndPassword(auth, email, password);
      const user = userCredential.user;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ
      const { error: verificationError } = await sendEmailVerification(user);
      if (verificationError) {
        console.error('Verification error:', verificationError);
        setError(verificationError);
        return;
      }

      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await setDoc(doc(db, 'profiles', user.uid), {
        email: user.email,
        tokens: 100,
        createdAt: new Date()
      });

      console.log('User profile created successfully');
      setShowVerification(true);
    } catch (err) {
      let errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞';
      if (err.code === 'auth/email-already-in-use') {
        errorMessage = '–≠—Ç–æ—Ç email —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è';
      } else if (err.code === 'auth/invalid-email') {
        errorMessage = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';
      } else if (err.code === 'auth/weak-password') {
        errorMessage = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤';
      }
      console.error('Registration error:', err.code, err.message);
      setError(errorMessage);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center">
      {showVerification ? (
        <div className="bg-gray-900 p-8 rounded-2xl max-w-md w-full mx-4 animate-fade-in">
          <div className="text-center">
            <Mail className="w-16 h-16 text-red-500 mx-auto mb-4" />
            <h2 className="text-2xl font-bold mb-4">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email</h2>
            <p className="text-gray-300 mb-6">
              –ù–∞ –≤–∞—à email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –ø–∏—Å—å–º–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞.
            </p>
            <button
              onClick={() => navigate('/program')}
              className="w-full bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-full transition-colors"
            >
              –ü–æ–Ω—è—Ç–Ω–æ
            </button>
          </div>
        </div>
      ) : showGift ? (
        <div className="bg-gray-900 p-8 rounded-2xl max-w-md w-full mx-4 animate-fade-in">
          <div className="text-center">
            <Gift className="w-16 h-16 text-red-500 mx-auto mb-4 animate-bounce" />
            <h2 className="text-2xl font-bold mb-4">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ</h2>
            <p className="text-gray-300 mb-6">
              –í—ã –ø–æ–ª—É—á–∏–ª–∏ 100 —Ç–æ–∫–µ–Ω–æ–≤ –≤ –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!
            </p>
            <button
              onClick={() => navigate('/program')}
              className="w-full bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-full transition-colors"
            >
              –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
            </button>
          </div>
        </div>
      ) : (
        <div className="bg-gray-900 p-8 rounded-2xl max-w-md w-full mx-4">
          <h2 className="text-2xl font-bold mb-6 text-center">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">Email</label>
              <input
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                className="w-full bg-gray-800 rounded-lg px-4 py-2 focus:ring-2 focus:ring-red-500 outline-none"
                required
              />
            </div>
            <div className="relative">
              <label className="block text-sm font-medium mb-2">–ü–∞—Ä–æ–ª—å</label>
              <div className="relative">
                <input
                  type={showPassword ? 'text' : 'password'}
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  className="w-full bg-gray-800 rounded-lg px-4 py-2 pr-10 focus:ring-2 focus:ring-red-500 outline-none"
                  required
                />
                <button
                  type="button"
                  onClick={() => setShowPassword(!showPassword)}
                  className="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-white"
                >
                  {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}
                </button>
              </div>
            </div>
            {error && (
              <p className="text-red-500 text-sm">{error}</p>
            )}
            <button
              type="submit"
              className="w-full bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-full transition-colors"
            >
              –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
            </button>
          </form>
        </div>
      )}
    </div>
  );
};